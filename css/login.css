section {
  text-align: center;
  height: 100vh;
}

.loginContainer {
  width: 280px;
  height: 250px;
  margin: auto;
  font-size: 15px;
  top: 50%;
  position: relative;
  transform: translateY(-50%);
}

.loginWarp {
  display: flex;
  justify-content: space-around;
}

.loginWarp h3 {
  font-size: 25px;
}

.passwordForgot {
  margin-top: 10px;
  font-size: xx-small;
  position: relative;
}

.passwordForgot span {
  position: absolute; /*어떤 요소에 absolute를 주면 블럭요소는 inline으로 변경됨.*/
  background-color: #ffffff;
  width: 100px;
  color: #000000;
  top: -40px;
  text-align: center;
  padding: 10px;
  border-radius: 20px;

  opacity: 0; /*이벤트설정 : 서서히 변하게 함*/
  transition: 0.5s; /*어떤 변화가 요청되면 0.5초뒤에 일어나자.*/
  visibility: hidden; /*특정 요소 접촉시 이벤트 발생*/
}

.passwordForgot span:after {
  content: ""; /*가상클래스 before, after는 무조건 content가 있어야 작동*/
  position: absolute; /*상위클래스icon이 relative이므로, absolute로 설정하여 동적페이지에도 같은 위치로 유지*/
  background-color: #ffffff;
  width: 10px;
  height: 10px;
  transform: rotate(45deg) translateX(-50%); /*transform은 한 요소에 1번밖에 못쓰므로 합쳐줘야함*/
  bottom: -5px;
  left: 20%; /*1. 왼쪽에서 50%위치에 둔다.*/
  /*2. 크기값을 50%만큼 이동시켜준다.->항상 중앙에 위치하게됨*/
}

.passwordForgot:hover span {
  opacity: 1;
  visibility: visible; /*hover시 발생하는 이벤트*/
}

.loginID,
.loginPassword {
  width: 250px;
  height: 32px;
  margin: 5px;
  font-size: 15px;
  border: 0;
  border-radius: 15px;
  outline: none;
  padding-left: 10px;
  background-color: rgb(233, 233, 233);
}

.loginButton {
  width: 263px;
  height: 32px;
  margin: 5px;
  font-size: 15px;
  border: 0;
  border-radius: 15px;
  outline: none;
  padding-left: 10px;
  color: white;
  background-color: #ca0000;
}

.loginButton:active {
  width: 263px;
  height: 32px;
  font-size: 15px;
  border: 0;
  border-radius: 15px;
  outline: none;
  padding-left: 10px;
  background-color: #ca000096;
}

.checkbox {
  display: flex;
  justify-content: center;
}

.checkbox span {
  position: absolute; /*어떤 요소에 absolute를 주면 블럭요소는 inline으로 변경됨.*/
  background-color: #ffffff;
  width: 100px;
  color: #000000;
  top: 100px;
  right: -60px;
  text-align: center;
  padding: 10px;
  border-radius: 20px;

  opacity: 0; /*이벤트설정 : 서서히 변하게 함*/
  transition: 0.5s; /*어떤 변화가 요청되면 0.5초뒤에 일어나자.*/
  visibility: hidden; /*특정 요소 접촉시 이벤트 발생*/
}

.checkbox span:after {
  content: ""; /*가상클래스 before, after는 무조건 content가 있어야 작동*/
  position: absolute; /*상위클래스icon이 relative이므로, absolute로 설정하여 동적페이지에도 같은 위치로 유지*/
  background-color: #ffffff;
  width: 5px;
  height: 5px;
  transform: rotate(45deg) translateX(-50%); /*transform은 한 요소에 1번밖에 못쓰므로 합쳐줘야함*/
  bottom: 10px;
  left: 1px; /*1. 왼쪽에서 50%위치에 둔다.*/
  /*2. 크기값을 50%만큼 이동시켜준다.->항상 중앙에 위치하게됨*/
}

.checkbox:hover span {
  opacity: 1;
  visibility: visible; /*hover시 발생하는 이벤트*/
}
